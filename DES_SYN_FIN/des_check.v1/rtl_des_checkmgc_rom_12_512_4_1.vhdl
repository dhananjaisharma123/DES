-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    10.5c/896140 Production Release
--  HLS Date:       Sun Sep  6 22:45:38 PDT 2020
-- 
--  Generated by:   ds6365@hansolo.poly.edu
--  Generated date: Sun Mar 21 12:43:56 2021
-- ----------------------------------------------------------------------

-- 
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;

PACKAGE des_checkmgc_rom_12_512_4_1_pkg IS 
  COMPONENT des_checkmgc_rom_12_512_4_1
    PORT (
      addr : IN STD_LOGIC_VECTOR(8 DOWNTO 0);
      data_out : OUT STD_LOGIC_VECTOR(3 DOWNTO 0)
    );
  END COMPONENT;
END des_checkmgc_rom_12_512_4_1_pkg;

PACKAGE BODY des_checkmgc_rom_12_512_4_1_pkg IS
END des_checkmgc_rom_12_512_4_1_pkg;

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;

USE mgc_hls.des_checkmgc_rom_12_512_4_1_pkg.all;
LIBRARY std;
USE std.textio.all;
USE ieee.std_logic_textio.all;

ENTITY des_checkmgc_rom_12_512_4_1 IS
    PORT (
      addr : IN STD_LOGIC_VECTOR(8 DOWNTO 0);
      data_out : OUT STD_LOGIC_VECTOR(3 DOWNTO 0)
    );
END des_checkmgc_rom_12_512_4_1;

ARCHITECTURE v1 OF des_checkmgc_rom_12_512_4_1 IS
  -- Start of SIF_NL_VHDL::nhl_rom_body
  -- Constants for ROM dimensions
  CONSTANT n_width    : INTEGER := 4;
  CONSTANT n_size     : INTEGER := 512;
  CONSTANT n_addr_w   : INTEGER := 9;
  CONSTANT n_inreg    : INTEGER := 0;
  CONSTANT n_outreg   : INTEGER := 0;
  -- Define data types for ROM storage;
  SUBTYPE  word  IS std_logic_vector((n_width)-1 DOWNTO 0);
  TYPE     table IS ARRAY (0 to n_size-1) of word;

  SIGNAL mem : table := table'(
    word'("1110"),
    word'("0100"),
    word'("1101"),
    word'("0001"),
    word'("0010"),
    word'("1111"),
    word'("1011"),
    word'("1000"),
    word'("0011"),
    word'("1010"),
    word'("0110"),
    word'("1100"),
    word'("0101"),
    word'("1001"),
    word'("0000"),
    word'("0111"),
    word'("0000"),
    word'("1111"),
    word'("0111"),
    word'("0100"),
    word'("1110"),
    word'("0010"),
    word'("1101"),
    word'("0001"),
    word'("1010"),
    word'("0110"),
    word'("1100"),
    word'("1011"),
    word'("1001"),
    word'("0101"),
    word'("0011"),
    word'("1000"),
    word'("0100"),
    word'("0001"),
    word'("1110"),
    word'("1000"),
    word'("1101"),
    word'("0110"),
    word'("0010"),
    word'("1011"),
    word'("1111"),
    word'("1100"),
    word'("1001"),
    word'("0111"),
    word'("0011"),
    word'("1010"),
    word'("0101"),
    word'("0000"),
    word'("1111"),
    word'("1100"),
    word'("1000"),
    word'("0010"),
    word'("0100"),
    word'("1001"),
    word'("0001"),
    word'("0111"),
    word'("0101"),
    word'("1011"),
    word'("0011"),
    word'("1110"),
    word'("1010"),
    word'("0000"),
    word'("0110"),
    word'("1101"),
    word'("1111"),
    word'("0001"),
    word'("1000"),
    word'("1110"),
    word'("0110"),
    word'("1011"),
    word'("0011"),
    word'("0100"),
    word'("1001"),
    word'("0111"),
    word'("0010"),
    word'("1101"),
    word'("1100"),
    word'("0000"),
    word'("0101"),
    word'("1010"),
    word'("0011"),
    word'("1101"),
    word'("0100"),
    word'("0111"),
    word'("1111"),
    word'("0010"),
    word'("1000"),
    word'("1110"),
    word'("1100"),
    word'("0000"),
    word'("0001"),
    word'("1010"),
    word'("0110"),
    word'("1001"),
    word'("1011"),
    word'("0101"),
    word'("0000"),
    word'("1110"),
    word'("0111"),
    word'("1011"),
    word'("1010"),
    word'("0100"),
    word'("1101"),
    word'("0001"),
    word'("0101"),
    word'("1000"),
    word'("1100"),
    word'("0110"),
    word'("1001"),
    word'("0011"),
    word'("0010"),
    word'("1111"),
    word'("1101"),
    word'("1000"),
    word'("1010"),
    word'("0001"),
    word'("0011"),
    word'("1111"),
    word'("0100"),
    word'("0010"),
    word'("1011"),
    word'("0110"),
    word'("0111"),
    word'("1100"),
    word'("0000"),
    word'("0101"),
    word'("1110"),
    word'("1001"),
    word'("1010"),
    word'("0000"),
    word'("1001"),
    word'("1110"),
    word'("0110"),
    word'("0011"),
    word'("1111"),
    word'("0101"),
    word'("0001"),
    word'("1101"),
    word'("1100"),
    word'("0111"),
    word'("1011"),
    word'("0100"),
    word'("0010"),
    word'("1000"),
    word'("1101"),
    word'("0111"),
    word'("0000"),
    word'("1001"),
    word'("0011"),
    word'("0100"),
    word'("0110"),
    word'("1010"),
    word'("0010"),
    word'("1000"),
    word'("0101"),
    word'("1110"),
    word'("1100"),
    word'("1011"),
    word'("1111"),
    word'("0001"),
    word'("1101"),
    word'("0110"),
    word'("0100"),
    word'("1001"),
    word'("1000"),
    word'("1111"),
    word'("0011"),
    word'("0000"),
    word'("1011"),
    word'("0001"),
    word'("0010"),
    word'("1100"),
    word'("0101"),
    word'("1010"),
    word'("1110"),
    word'("0111"),
    word'("0001"),
    word'("1010"),
    word'("1101"),
    word'("0000"),
    word'("0110"),
    word'("1001"),
    word'("1000"),
    word'("0111"),
    word'("0100"),
    word'("1111"),
    word'("1110"),
    word'("0011"),
    word'("1011"),
    word'("0101"),
    word'("0010"),
    word'("1100"),
    word'("0111"),
    word'("1101"),
    word'("1110"),
    word'("0011"),
    word'("0000"),
    word'("0110"),
    word'("1001"),
    word'("1010"),
    word'("0001"),
    word'("0010"),
    word'("1000"),
    word'("0101"),
    word'("1011"),
    word'("1100"),
    word'("0100"),
    word'("1111"),
    word'("1101"),
    word'("1000"),
    word'("1011"),
    word'("0101"),
    word'("0110"),
    word'("1111"),
    word'("0000"),
    word'("0011"),
    word'("0100"),
    word'("0111"),
    word'("0010"),
    word'("1100"),
    word'("0001"),
    word'("1010"),
    word'("1110"),
    word'("1001"),
    word'("1010"),
    word'("0110"),
    word'("1001"),
    word'("0000"),
    word'("1100"),
    word'("1011"),
    word'("0111"),
    word'("1101"),
    word'("1111"),
    word'("0001"),
    word'("0011"),
    word'("1110"),
    word'("0101"),
    word'("0010"),
    word'("1000"),
    word'("0100"),
    word'("0011"),
    word'("1111"),
    word'("0000"),
    word'("0110"),
    word'("1010"),
    word'("0001"),
    word'("1101"),
    word'("1000"),
    word'("1001"),
    word'("0100"),
    word'("0101"),
    word'("1011"),
    word'("1100"),
    word'("0111"),
    word'("0010"),
    word'("1110"),
    word'("0010"),
    word'("1100"),
    word'("0100"),
    word'("0001"),
    word'("0111"),
    word'("1010"),
    word'("1011"),
    word'("0110"),
    word'("1000"),
    word'("0101"),
    word'("0011"),
    word'("1111"),
    word'("1101"),
    word'("0000"),
    word'("1110"),
    word'("1001"),
    word'("1110"),
    word'("1011"),
    word'("0010"),
    word'("1100"),
    word'("0100"),
    word'("0111"),
    word'("1101"),
    word'("0001"),
    word'("0101"),
    word'("0000"),
    word'("1111"),
    word'("1010"),
    word'("0011"),
    word'("1001"),
    word'("1000"),
    word'("0110"),
    word'("0100"),
    word'("0010"),
    word'("0001"),
    word'("1011"),
    word'("1010"),
    word'("1101"),
    word'("0111"),
    word'("1000"),
    word'("1111"),
    word'("1001"),
    word'("1100"),
    word'("0101"),
    word'("0110"),
    word'("0011"),
    word'("0000"),
    word'("1110"),
    word'("1011"),
    word'("1000"),
    word'("1100"),
    word'("0111"),
    word'("0001"),
    word'("1110"),
    word'("0010"),
    word'("1101"),
    word'("0110"),
    word'("1111"),
    word'("0000"),
    word'("1001"),
    word'("1010"),
    word'("0100"),
    word'("0101"),
    word'("0011"),
    word'("1100"),
    word'("0001"),
    word'("1010"),
    word'("1111"),
    word'("1001"),
    word'("0010"),
    word'("0110"),
    word'("1000"),
    word'("0000"),
    word'("1101"),
    word'("0011"),
    word'("0100"),
    word'("1110"),
    word'("0111"),
    word'("0101"),
    word'("1011"),
    word'("1010"),
    word'("1111"),
    word'("0100"),
    word'("0010"),
    word'("0111"),
    word'("1100"),
    word'("1001"),
    word'("0101"),
    word'("0110"),
    word'("0001"),
    word'("1101"),
    word'("1110"),
    word'("0000"),
    word'("1011"),
    word'("0011"),
    word'("1000"),
    word'("1001"),
    word'("1110"),
    word'("1111"),
    word'("0101"),
    word'("0010"),
    word'("1000"),
    word'("1100"),
    word'("0011"),
    word'("0111"),
    word'("0000"),
    word'("0100"),
    word'("1010"),
    word'("0001"),
    word'("1101"),
    word'("1011"),
    word'("0110"),
    word'("0100"),
    word'("0011"),
    word'("0010"),
    word'("1100"),
    word'("1001"),
    word'("0101"),
    word'("1111"),
    word'("1010"),
    word'("1011"),
    word'("1110"),
    word'("0001"),
    word'("0111"),
    word'("0110"),
    word'("0000"),
    word'("1000"),
    word'("1101"),
    word'("0100"),
    word'("1011"),
    word'("0010"),
    word'("1110"),
    word'("1111"),
    word'("0000"),
    word'("1000"),
    word'("1101"),
    word'("0011"),
    word'("1100"),
    word'("1001"),
    word'("0111"),
    word'("0101"),
    word'("1010"),
    word'("0110"),
    word'("0001"),
    word'("1101"),
    word'("0000"),
    word'("1011"),
    word'("0111"),
    word'("0100"),
    word'("1001"),
    word'("0001"),
    word'("1010"),
    word'("1110"),
    word'("0011"),
    word'("0101"),
    word'("1100"),
    word'("0010"),
    word'("1111"),
    word'("1000"),
    word'("0110"),
    word'("0001"),
    word'("0100"),
    word'("1011"),
    word'("1101"),
    word'("1100"),
    word'("0011"),
    word'("0111"),
    word'("1110"),
    word'("1010"),
    word'("1111"),
    word'("0110"),
    word'("1000"),
    word'("0000"),
    word'("0101"),
    word'("1001"),
    word'("0010"),
    word'("0110"),
    word'("1011"),
    word'("1101"),
    word'("1000"),
    word'("0001"),
    word'("0100"),
    word'("1010"),
    word'("0111"),
    word'("1001"),
    word'("0101"),
    word'("0000"),
    word'("1111"),
    word'("1110"),
    word'("0010"),
    word'("0011"),
    word'("1100"),
    word'("1101"),
    word'("0010"),
    word'("1000"),
    word'("0100"),
    word'("0110"),
    word'("1111"),
    word'("1011"),
    word'("0001"),
    word'("1010"),
    word'("1001"),
    word'("0011"),
    word'("1110"),
    word'("0101"),
    word'("0000"),
    word'("1100"),
    word'("0111"),
    word'("0001"),
    word'("1111"),
    word'("1101"),
    word'("1000"),
    word'("1010"),
    word'("0011"),
    word'("0111"),
    word'("0100"),
    word'("1100"),
    word'("0101"),
    word'("0110"),
    word'("1011"),
    word'("0000"),
    word'("1110"),
    word'("1001"),
    word'("0010"),
    word'("0111"),
    word'("1011"),
    word'("0100"),
    word'("0001"),
    word'("1001"),
    word'("1100"),
    word'("1110"),
    word'("0010"),
    word'("0000"),
    word'("0110"),
    word'("1010"),
    word'("1101"),
    word'("1111"),
    word'("0011"),
    word'("0101"),
    word'("1000"),
    word'("0010"),
    word'("0001"),
    word'("1110"),
    word'("0111"),
    word'("0100"),
    word'("1010"),
    word'("1000"),
    word'("1101"),
    word'("1111"),
    word'("1100"),
    word'("1001"),
    word'("0000"),
    word'("0011"),
    word'("0101"),
    word'("0110"),
    word'("1011")
  );
  ATTRIBUTE rom_style : string;
  ATTRIBUTE rom_style OF mem : SIGNAL IS "block";
BEGIN

  -- Reading ROM
  PROCESS(addr)
    VARIABLE idx_addr : INTEGER;
  BEGIN
    idx_addr := conv_integer(unsigned(addr(8 DOWNTO 0)));
    data_out <= mem(idx_addr);
  END PROCESS;

END v1;


